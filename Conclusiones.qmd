# Conclusiones

Los patrones de diseño sin lugar a dudas son soluciones a problemas conocidos dentro del desarrollo de software. Ya sea un patrón GoF o POSA nos permiten resolver distintos retos al momento de crear una herramienta de software.

Los patrones de arquitectura, nos permiten decidir cual de estos se ajusta más a la necesidad de la aplicación que vamos a desarrollar y con esto no tener problemas de mantenibilidad y escalabilidad en el futuro. Por su parte, los GoF nos permiten resolver distintos problemas que se pueden presentar en el desarrollo y la escritura del código de nuestro aplicativo; con esto podemos evitar problemas de redundancia, del llamado código espagueti y muchos otros que pueden llegar a ser un verdadero dolor de cabeza.

En este informe se ha revisado en profundidad la definición, clasificación y utilidad de los patrones de diseño en ingeniería de software. Como mencionamos, los patrones proporcionan un lenguaje común y un conjunto de soluciones maduras para problemas recurrentes, lo que mejora la calidad del diseño y acelera el desarrollo. 

La clasificación tradicional (creacionales, estructurales y comportamentales) sigue siendo válida, y los patrones GOF ejemplifican cada categoría. Además, los patrones de arquitectura (como capas y MVC) orientan la estructura macro del sistema. 

La investigación reciente indica que los patrones se aplican ampliamente en dominios modernos (sistemas basados en IA, microservicios y arquitecturas en nube). Sin embargo, también advierte sobre la necesidad de aplicar los patrones con criterio, evitando anti-patrones y aprovechando herramientas avanzadas de soporte. Para la práctica en C#, muchos patrones se reflejan en características del lenguaje: por ejemplo, eventos/delegados implementan Observer, y clases como StringBuilder ejemplifican Builder. Concluimos que el conocimiento profundo de patrones de diseño es esencial para diseñar software robusto y de calidad. Se recomienda a los desarrolladores y arquitectos familiarizarse con estos patrones clásicos y emergentes, adaptándolos según contexto, siempre basándose en evidencia y fuentes confiables.

La incorporación de patrones, tal como se expone en obras fundamentales como las de [@gamma1995design] y [@fowler2002patterns], no solo permite abordar problemas comunes de forma estructurada, sino que también facilita el diseño sostenible de soluciones escalables.

\newpage